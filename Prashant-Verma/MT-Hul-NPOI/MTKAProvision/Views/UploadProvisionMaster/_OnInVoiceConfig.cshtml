
@using MT.Model;
@{
    UserRoleRights userRights = ViewBag.LoggedInUserRights as UserRoleRights;
    bool isUploadRight = userRights.UserRole.RoleName == "Admin" ? true : userRights.UserRights.Where(u => u.PageId == "OnInvoiceVal").FirstOrDefault().Write;
}
<div class="row">
    <div class="col-sm-12">

        <div class="row mbottom10">
            <div class="col-sm-12">
                <!-- Data Table -->
                <section id="tableinfo" class="mtop20">
                    <div class="">
                        @*<button id="addNewSateCode">Add New</button>*@
                        @if(isUploadRight==true)
                        {
                             <img src="/img/dashboard/newmoc.jpg" id="addNewSateCode" alt="" class="icon-plus-style" title="Add new State Code">
                            
                        }
                        
                        <table id="onInVoiceConfigMaster" class="table table-striped table-bordered table-condensed" cellspacing="0" width="100%" data-isuploadright="@isUploadRight">
                            <thead>
                                <tr>
                                    <th>State Code</th>
                                    <th>Net Sale applicable</th>
                                    <th>Edit</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody></tbody>

                        </table>
                    </div>
                    <div class="clearfix"></div>
                </section>
            </div>
        </div>
        <div class="mbottom10"></div>
    </div>
    <!--  Right Column -->
</div>
<script>

    var uploadMasters1_dtObj; 
    var netSaleValue;
    $(document).ready(function () {

        GetOnInVoiceConfigMasterTableData();
    });

    function GetOnInVoiceConfigMasterTableData() {
      
        if (uploadMasters1_dtObj != undefined) {
            uploadMasters1_dtObj.destroy();
        }

        uploadMasters1_dtObj = $('#onInVoiceConfigMaster').DataTable({


            createdRow: function (row, data, dataIndex) {

                $(row).find('td:eq(3) a')
          .attr('data-stateCode', data.StateCode)


            },



            "ajax": {
                "url": "/OnInVoiceConfigMaster/GetOnInVoiceConfigData",
                "type": "GET",
                "datatype": "json",

                //"error": function (xhr, textStatus, errorThrown) {
                //    callOnError(xhr, textStatus, errorThrown);

                //},
                //"error": function (xhr, err) {
                //    alert("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                //    alert("responseText: " + xhr.responseText);

                //}

            },

            //"columnDefs": [{
            //    "targets": -1,
            //    "data": null,
            //    "defaultContent": "<button>Click!</button>"
            //}],
            "columns": [

                    { "data": "StateCode", "orderable": false },
                      { "data": "IsNetSaleAppl", "orderable": false },


                    //{ "defaultContent": '<input type="checkbox" class="checkbox1"/>' },
                    { "defaultContent": '<a class="edit" href=#>Edit </a><a class="hide cancel"  href=#>cancel</a>&nbsp&nbsp<a class="hide save"  href=#>save</a>' },
                    { "defaultContent": '<a class="deleteStateCode" href=#><span class="glyphicon glyphicon-trash text-danger"></span> </a>' },
            ],


            "scrollX": true,
            "scrollY": 260,
            "scroller": {
                loadingIndicator: true
            }

        });


    }

    $(document).off('click', '#addNewStateCode').on('click', '#addNewSateCode', function () {
       
        $('#stateCode').val(null);
        $('#netSaleAppl').prop('checked', false);
        $('#onInVoiceConfigModal').modal('show');
        //var p = "<p>Add Chian Name</p><p style='color:darkorange;'></p>";
        //$("#confirmModal div.modal-header").html(p);

        //     //<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
        //        //<button type="button" class="btn btn-primary" id="btnSaveOnInVoiceConfig">Save</button>
        

        //        var i= '<div class="row"><div class="col-sm-4"><p>Chain Name</p></div><div class="col-sm-8"><input type=text id=stateCode></div></div><div class="row"><div class="col-sm-4"><p>Is HuggiesApplicable</p></div><div class="col-sm-8"><input type=checkbox id=netSaleAppl/></div></div>'
       
        //$("#confirmModal div.modal-body").html(i);
        //$("#confirmModal").modal('show');


    });

    $(document).off('click', '#btnSaveOnInVoiceConfig').on('click', '#btnSaveOnInVoiceConfig', function () {
       
        var statecode= $('#stateCode').val();
        var isnetsaleappl = $('#netSaleAppl').prop('checked');
        if (statecode != "") {
            $.ajax({
                type: 'GET',
                url: '/OnInVoiceConfigMaster/AddOnInVoiceConfig',
                data: {
                    stateCode: statecode,
                    isNetSaleAppl: isnetsaleappl,


                },
                success: function (data) {

                    $('#onInVoiceConfigModal').modal('hide');
                    bootbox.alert(data.msg);
                    GetOnInVoiceConfigMasterTableData();

                },
                error: function (xhr, err) {
                    alert("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                    alert("responseText: " + xhr.responseText);

                }


            })
        }

        else {

            $('#onInvoiceConfigModal').modal('hide');
            bootbox.alert("cant insert blank data");


        }




    });

    $(document).off('click', '.deleteStateCode').on('click', '.deleteStateCode', function () {
       
        var isUploadUserRight = $('#onInVoiceConfigMaster').data('isuploadright');
        if (isUploadUserRight.toLowerCase() == "true")
        {
            var statecode = $(this).data('statecode');

            var box = bootbox.confirm("Are you sure you want to delete this record", function (result) {
                if (result == true) {
                    $.ajax({
                        type: 'GET',
                        url: '/OnInVoiceConfigMaster/DeleteOnInVoiceConfig',
                        data: {
                            stateCodeTODelete: statecode

                        },
                        success: function (data) {

                            bootbox.alert(data.msg);

                            GetOnInVoiceConfigMasterTableData();

                        },
                        error: function (xhr, err) {
                            alert("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                            alert("responseText: " + xhr.responseText);

                        }

                    });
                }

                else {
                    box.modal('hide');
                }

            });
            //debugger;

        }
        else {
            bootbox.alert("You don't have permission to delete the records");
        }
      

    });

    $(document).off('click', '.edit').on('click', '.edit', function () {

        var isUploadUserRight = $('#onInVoiceConfigMaster').data('isuploadright');
        if (isUploadUserRight.toLowerCase() == "true")
        {
            if ($('#editStateCode').length == 0) {
                $(this).next('a.cancel').removeClass('hide');
                $(this).next('a').next('a.save').removeClass('hide');
                $(this).addClass('hide');

                //var val = $(this).closest('td').prev('td').text();
                var val = $(this).closest('td').prev('td').prev('td').text();

                var isNetSaleAppl = '<input type="checkbox" class="checkbox1"/>';
                var innerHtml = '<input type="text" id="editStateCode" data-value=' + val + ' value=' + val + '>';
                //$(this).prev('td').prev('td').html(innerHtml);
                $(this).closest('td').prev('td').prev('td').html(innerHtml);
                //var isHuggies = $(this).closest('td').prev('td').text();
                netSaleValue = $(this).closest('td').prev('td').text();
                $(this).closest('td').prev('td').html(isNetSaleAppl);
                if (netSaleValue == "YES") {
                    $('.checkbox1').prop('checked', 'True')

                }


                $('#editStateCode').focus();

            }



        }
        else
        {
            bootbox.alert("You don't have permission to edit the records");

        }



    });


    $(document).off('click', '.cancel').on('click', '.cancel', function () {
       
        $(this).next('a.save').addClass('hide');
        $(this).prev('a.edit').removeClass('hide');
        $(this).addClass('hide');
        var val = $('#editStateCode').data('value');
        $('#editStateCode').replaceWith(val);

        //var huggies = $('.checkbox1').prop('checked')
        if (netSaleValue == "YES") {
            $('.checkbox1').replaceWith("YES")
        }
        else {
            $('.checkbox1').replaceWith("NO")
        }

    });


    $(document).off('click', '.save').on('click', '.save', function () {

       
        edittextvalue = $('#editStateCode').val();
        var val = $('#editStateCode').data('value'); //$('#editGLAccount').data('value');
        $(this).prev('a.cancel').addClass('hide');
        $(this).prev('a').prev('a.edit').removeClass('hide');
        $(this).addClass('hide');

        if (edittextvalue != "") {
            var box = bootbox.confirm("Are you sure u want to save the changes", function (result) {

                if (result == true) {
                   
                    var newNetSaleApplValue = $('.checkbox1').prop('checked')
                    $('#editChianName').data('value', edittextvalue);
                    $.ajax({
                        type: 'GET',
                        url: '/OnInVoiceConfigMaster/EditOnInVoiceConfigMaster',
                        data: {
                            newStateCode: edittextvalue,
                            oldStateCode: val,
                            isNetSaleAppl: newNetSaleApplValue,
                        },
                        success: function (data) {
                          
                            bootbox.alert(data.msg);
                            
                            $('#editStateCode').replaceWith(edittextvalue);
                            if (netSaleValue == "YES") {
                                $('.checkbox1').replaceWith("YES")
                            }
                            else {
                                $('.checkbox1').replaceWith("NO")
                            }

                            GetOnInVoiceConfigMasterTableData();

                        }
                    });


                }
                else {

                    $('#editSateCode').replaceWith(val);
                    if (netSaleValue == "YES") {
                        $('.checkbox1').replaceWith("YES")
                    }
                    else {
                        $('.checkbox1').replaceWith("NO")
                    }


                }

            });

        }
        else {
           
            $('#editStateCode').replaceWith(val);
            if (netSaleValueValue == "YES") {
                $('.checkbox1').replaceWith("YES")
            }
            else {
                $('.checkbox1').replaceWith("NO")
            }
            bootbox.alert("Can not edit null value");
        }


    });



    $(document).on('keypress', '#editStateCode', function (e) {
       
        var totaldigit = $('#editStateCode').val();
        if (totaldigit.length >=4) {
            //display error message
          
            //$(this).html("Digits Only").show().fadeOut("slow");

            return false;
        }
    })
    
    $(document).on('keypress', '#stateCode', function (e) {
       
        var totaldigit = $('#stateCode').val();
        if (totaldigit.length >=4) {
            //display error message
          
            //$(this).html("Digits Only").show().fadeOut("slow");

            return false;
        }
    })

</script>
